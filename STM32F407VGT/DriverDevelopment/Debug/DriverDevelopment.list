
DriverDevelopment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000004bc  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000644  0800064c  0000164c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000644  08000644  0000164c  2**0
                  CONTENTS
  4 .ARM          00000000  08000644  08000644  0000164c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000644  0800064c  0000164c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000644  08000644  00001644  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000648  08000648  00001648  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0000164c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0000164c  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000083b  00000000  00000000  00001676  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000258  00000000  00000000  00001eb1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000a0  00000000  00000000  00002110  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000006d  00000000  00000000  000021b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000156b  00000000  00000000  0000221d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d32  00000000  00000000  00003788  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00006097  00000000  00000000  000044ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000a551  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000001a8  00000000  00000000  0000a594  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000068  00000000  00000000  0000a73c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	0800062c 	.word	0x0800062c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	0800062c 	.word	0x0800062c

080001c8 <main>:
#include <stdint.h>
#include <stm32f407xx.h>
#include <stm32f407xx_GPIO_driver.h>


int main(void){
 80001c8:	b580      	push	{r7, lr}
 80001ca:	b08c      	sub	sp, #48	@ 0x30
 80001cc:	af00      	add	r7, sp, #0
	GPIO_Handle_t SENSOR, LED, LED1, LED2;
			LED.pGPIOx =GPIOD;
 80001ce:	4b27      	ldr	r3, [pc, #156]	@ (800026c <main+0xa4>)
 80001d0:	61bb      	str	r3, [r7, #24]
			LED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 80001d2:	230c      	movs	r3, #12
 80001d4:	773b      	strb	r3, [r7, #28]
			LED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001d6:	2301      	movs	r3, #1
 80001d8:	777b      	strb	r3, [r7, #29]
			LED.GPIO_PinConfig.GPIO_PinOPType= GPIO_OP_TYPE_PP;
 80001da:	2300      	movs	r3, #0
 80001dc:	f887 3020 	strb.w	r3, [r7, #32]
			LED.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80001e0:	2300      	movs	r3, #0
 80001e2:	77fb      	strb	r3, [r7, #31]
			LED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80001e4:	2302      	movs	r3, #2
 80001e6:	77bb      	strb	r3, [r7, #30]


			LED1.pGPIOx =GPIOD;
 80001e8:	4b20      	ldr	r3, [pc, #128]	@ (800026c <main+0xa4>)
 80001ea:	60fb      	str	r3, [r7, #12]
			LED1.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 80001ec:	230d      	movs	r3, #13
 80001ee:	743b      	strb	r3, [r7, #16]
			LED1.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 80001f0:	2301      	movs	r3, #1
 80001f2:	747b      	strb	r3, [r7, #17]
			LED1.GPIO_PinConfig.GPIO_PinOPType= GPIO_OP_TYPE_PP;
 80001f4:	2300      	movs	r3, #0
 80001f6:	753b      	strb	r3, [r7, #20]
			LED1.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 80001f8:	2300      	movs	r3, #0
 80001fa:	74fb      	strb	r3, [r7, #19]
			LED1.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 80001fc:	2302      	movs	r3, #2
 80001fe:	74bb      	strb	r3, [r7, #18]

			LED2.pGPIOx = GPIOA;
 8000200:	4b1b      	ldr	r3, [pc, #108]	@ (8000270 <main+0xa8>)
 8000202:	603b      	str	r3, [r7, #0]
//			LED2.GPIO_PinConfig.GPIO_PinNumber =


			SENSOR.pGPIOx = GPIOA;
 8000204:	4b1a      	ldr	r3, [pc, #104]	@ (8000270 <main+0xa8>)
 8000206:	627b      	str	r3, [r7, #36]	@ 0x24
			SENSOR.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_10;
 8000208:	230a      	movs	r3, #10
 800020a:	f887 3028 	strb.w	r3, [r7, #40]	@ 0x28
			SENSOR.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IN;
 800020e:	2300      	movs	r3, #0
 8000210:	f887 3029 	strb.w	r3, [r7, #41]	@ 0x29



			GPIO_Init(&LED);
 8000214:	f107 0318 	add.w	r3, r7, #24
 8000218:	4618      	mov	r0, r3
 800021a:	f000 f8c5 	bl	80003a8 <GPIO_Init>
			GPIO_Init(&SENSOR);
 800021e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000222:	4618      	mov	r0, r3
 8000224:	f000 f8c0 	bl	80003a8 <GPIO_Init>

			GPIO_WriteToOutputPin(GPIOD, 13, 1);
 8000228:	2201      	movs	r2, #1
 800022a:	210d      	movs	r1, #13
 800022c:	480f      	ldr	r0, [pc, #60]	@ (800026c <main+0xa4>)
 800022e:	f000 f9b5 	bl	800059c <GPIO_WriteToOutputPin>

			while(1){

				GPIO_WriteToOutputPin(GPIOD, 12, 0);
 8000232:	2200      	movs	r2, #0
 8000234:	210c      	movs	r1, #12
 8000236:	480d      	ldr	r0, [pc, #52]	@ (800026c <main+0xa4>)
 8000238:	f000 f9b0 	bl	800059c <GPIO_WriteToOutputPin>
				GPIO_WriteToOutputPin(GPIOD, 13, 1);
 800023c:	2201      	movs	r2, #1
 800023e:	210d      	movs	r1, #13
 8000240:	480a      	ldr	r0, [pc, #40]	@ (800026c <main+0xa4>)
 8000242:	f000 f9ab 	bl	800059c <GPIO_WriteToOutputPin>
				if(GPIO_ReadFromInputPin(GPIOA, 10) == 0){
 8000246:	210a      	movs	r1, #10
 8000248:	4809      	ldr	r0, [pc, #36]	@ (8000270 <main+0xa8>)
 800024a:	f000 f992 	bl	8000572 <GPIO_ReadFromInputPin>
 800024e:	4603      	mov	r3, r0
 8000250:	2b00      	cmp	r3, #0
 8000252:	d1ee      	bne.n	8000232 <main+0x6a>
					GPIO_WriteToOutputPin(GPIOD, 13, 0);
 8000254:	2200      	movs	r2, #0
 8000256:	210d      	movs	r1, #13
 8000258:	4804      	ldr	r0, [pc, #16]	@ (800026c <main+0xa4>)
 800025a:	f000 f99f 	bl	800059c <GPIO_WriteToOutputPin>
					GPIO_WriteToOutputPin(GPIOD, 12, 1);
 800025e:	2201      	movs	r2, #1
 8000260:	210c      	movs	r1, #12
 8000262:	4802      	ldr	r0, [pc, #8]	@ (800026c <main+0xa4>)
 8000264:	f000 f99a 	bl	800059c <GPIO_WriteToOutputPin>
				GPIO_WriteToOutputPin(GPIOD, 12, 0);
 8000268:	e7e3      	b.n	8000232 <main+0x6a>
 800026a:	bf00      	nop
 800026c:	40020c00 	.word	0x40020c00
 8000270:	40020000 	.word	0x40020000

08000274 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000274:	480d      	ldr	r0, [pc, #52]	@ (80002ac <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000276:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000278:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800027c:	480c      	ldr	r0, [pc, #48]	@ (80002b0 <LoopForever+0x6>)
  ldr r1, =_edata
 800027e:	490d      	ldr	r1, [pc, #52]	@ (80002b4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000280:	4a0d      	ldr	r2, [pc, #52]	@ (80002b8 <LoopForever+0xe>)
  movs r3, #0
 8000282:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000284:	e002      	b.n	800028c <LoopCopyDataInit>

08000286 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000286:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000288:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800028a:	3304      	adds	r3, #4

0800028c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800028c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000290:	d3f9      	bcc.n	8000286 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000292:	4a0a      	ldr	r2, [pc, #40]	@ (80002bc <LoopForever+0x12>)
  ldr r4, =_ebss
 8000294:	4c0a      	ldr	r4, [pc, #40]	@ (80002c0 <LoopForever+0x16>)
  movs r3, #0
 8000296:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000298:	e001      	b.n	800029e <LoopFillZerobss>

0800029a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800029a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800029c:	3204      	adds	r2, #4

0800029e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002a0:	d3fb      	bcc.n	800029a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002a2:	f000 f99f 	bl	80005e4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002a6:	f7ff ff8f 	bl	80001c8 <main>

080002aa <LoopForever>:

LoopForever:
  b LoopForever
 80002aa:	e7fe      	b.n	80002aa <LoopForever>
  ldr   r0, =_estack
 80002ac:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80002b0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b8:	0800064c 	.word	0x0800064c
  ldr r2, =_sbss
 80002bc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002c0:	2000001c 	.word	0x2000001c

080002c4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c4:	e7fe      	b.n	80002c4 <ADC_IRQHandler>
	...

080002c8 <GPIO_PCLKControl>:
 */

#include<stm32f407xx.h>
#include<stm32f407xx_GPIO_driver.h>

void GPIO_PCLKControl(GPIO_RegDef_t *pGPIOx,int8_t EnorDi){
 80002c8:	b480      	push	{r7}
 80002ca:	b083      	sub	sp, #12
 80002cc:	af00      	add	r7, sp, #0
 80002ce:	6078      	str	r0, [r7, #4]
 80002d0:	460b      	mov	r3, r1
 80002d2:	70fb      	strb	r3, [r7, #3]
	if(EnorDi==ENABLE){
 80002d4:	f997 3003 	ldrsb.w	r3, [r7, #3]
 80002d8:	2b01      	cmp	r3, #1
 80002da:	d12b      	bne.n	8000334 <GPIO_PCLKControl+0x6c>
		if(pGPIOx==GPIOA){
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	4a2d      	ldr	r2, [pc, #180]	@ (8000394 <GPIO_PCLKControl+0xcc>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d106      	bne.n	80002f2 <GPIO_PCLKControl+0x2a>
			GPIOA_PCLK_EN();
 80002e4:	4b2c      	ldr	r3, [pc, #176]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002e8:	4a2b      	ldr	r2, [pc, #172]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 80002ea:	f043 0301 	orr.w	r3, r3, #1
 80002ee:	6313      	str	r3, [r2, #48]	@ 0x30
		else if(pGPIOx==GPIOD){
			GPIOD_PCLK_DI();
		}

	}
}
 80002f0:	e04b      	b.n	800038a <GPIO_PCLKControl+0xc2>
		else if(pGPIOx==GPIOB){
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a29      	ldr	r2, [pc, #164]	@ (800039c <GPIO_PCLKControl+0xd4>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PCLKControl+0x40>
			GPIOB_PCLK_EN();
 80002fa:	4b27      	ldr	r3, [pc, #156]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002fe:	4a26      	ldr	r2, [pc, #152]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 8000300:	f043 0302 	orr.w	r3, r3, #2
 8000304:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000306:	e040      	b.n	800038a <GPIO_PCLKControl+0xc2>
		else if(pGPIOx==GPIOC){
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a25      	ldr	r2, [pc, #148]	@ (80003a0 <GPIO_PCLKControl+0xd8>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PCLKControl+0x56>
			GPIOC_PCLK_EN();
 8000310:	4b21      	ldr	r3, [pc, #132]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000314:	4a20      	ldr	r2, [pc, #128]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 8000316:	f043 0304 	orr.w	r3, r3, #4
 800031a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800031c:	e035      	b.n	800038a <GPIO_PCLKControl+0xc2>
		else if(pGPIOx==GPIOD){
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a20      	ldr	r2, [pc, #128]	@ (80003a4 <GPIO_PCLKControl+0xdc>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d131      	bne.n	800038a <GPIO_PCLKControl+0xc2>
			GPIOD_PCLK_EN();
 8000326:	4b1c      	ldr	r3, [pc, #112]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800032a:	4a1b      	ldr	r2, [pc, #108]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 800032c:	f043 0308 	orr.w	r3, r3, #8
 8000330:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000332:	e02a      	b.n	800038a <GPIO_PCLKControl+0xc2>
		if(pGPIOx==GPIOA){
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a17      	ldr	r2, [pc, #92]	@ (8000394 <GPIO_PCLKControl+0xcc>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PCLKControl+0x82>
			GPIOA_PCLK_DI();
 800033c:	4b16      	ldr	r3, [pc, #88]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000340:	4a15      	ldr	r2, [pc, #84]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 8000342:	f023 0301 	bic.w	r3, r3, #1
 8000346:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000348:	e01f      	b.n	800038a <GPIO_PCLKControl+0xc2>
		else if(pGPIOx==GPIOB){
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a13      	ldr	r2, [pc, #76]	@ (800039c <GPIO_PCLKControl+0xd4>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d106      	bne.n	8000360 <GPIO_PCLKControl+0x98>
			GPIOB_PCLK_DI();
 8000352:	4b11      	ldr	r3, [pc, #68]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000356:	4a10      	ldr	r2, [pc, #64]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 8000358:	f023 0302 	bic.w	r3, r3, #2
 800035c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800035e:	e014      	b.n	800038a <GPIO_PCLKControl+0xc2>
		else if(pGPIOx==GPIOC){
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a0f      	ldr	r2, [pc, #60]	@ (80003a0 <GPIO_PCLKControl+0xd8>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PCLKControl+0xae>
			GPIOC_PCLK_DI();
 8000368:	4b0b      	ldr	r3, [pc, #44]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800036c:	4a0a      	ldr	r2, [pc, #40]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 800036e:	f023 0304 	bic.w	r3, r3, #4
 8000372:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000374:	e009      	b.n	800038a <GPIO_PCLKControl+0xc2>
		else if(pGPIOx==GPIOD){
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a0a      	ldr	r2, [pc, #40]	@ (80003a4 <GPIO_PCLKControl+0xdc>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d105      	bne.n	800038a <GPIO_PCLKControl+0xc2>
			GPIOD_PCLK_DI();
 800037e:	4b06      	ldr	r3, [pc, #24]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000382:	4a05      	ldr	r2, [pc, #20]	@ (8000398 <GPIO_PCLKControl+0xd0>)
 8000384:	f023 0308 	bic.w	r3, r3, #8
 8000388:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800038a:	bf00      	nop
 800038c:	370c      	adds	r7, #12
 800038e:	46bd      	mov	sp, r7
 8000390:	bc80      	pop	{r7}
 8000392:	4770      	bx	lr
 8000394:	40020000 	.word	0x40020000
 8000398:	40023800 	.word	0x40023800
 800039c:	40020400 	.word	0x40020400
 80003a0:	40020800 	.word	0x40020800
 80003a4:	40020c00 	.word	0x40020c00

080003a8 <GPIO_Init>:
void GPIO_Init(GPIO_Handle_t *pGPIOHandle){
 80003a8:	b580      	push	{r7, lr}
 80003aa:	b084      	sub	sp, #16
 80003ac:	af00      	add	r7, sp, #0
 80003ae:	6078      	str	r0, [r7, #4]
	int32_t temp=0;
 80003b0:	2300      	movs	r3, #0
 80003b2:	60fb      	str	r3, [r7, #12]
	GPIO_PCLKControl(pGPIOHandle->pGPIOx,ENABLE);
 80003b4:	687b      	ldr	r3, [r7, #4]
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	2101      	movs	r1, #1
 80003ba:	4618      	mov	r0, r3
 80003bc:	f7ff ff84 	bl	80002c8 <GPIO_PCLKControl>
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<=GPIO_MODE_ANALOG){
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	f993 3005 	ldrsb.w	r3, [r3, #5]
 80003c6:	2b03      	cmp	r3, #3
 80003c8:	dc21      	bgt.n	800040e <GPIO_Init+0x66>
		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003ca:	687b      	ldr	r3, [r7, #4]
 80003cc:	f993 3005 	ldrsb.w	r3, [r3, #5]
 80003d0:	461a      	mov	r2, r3
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	f993 3004 	ldrsb.w	r3, [r3, #4]
 80003d8:	005b      	lsls	r3, r3, #1
 80003da:	fa02 f303 	lsl.w	r3, r2, r3
 80003de:	60fb      	str	r3, [r7, #12]
		(pGPIOHandle->pGPIOx->MODER&=~(0x3<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber))); //clear
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	6819      	ldr	r1, [r3, #0]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	f993 3004 	ldrsb.w	r3, [r3, #4]
 80003ec:	005b      	lsls	r3, r3, #1
 80003ee:	2203      	movs	r2, #3
 80003f0:	fa02 f303 	lsl.w	r3, r2, r3
 80003f4:	43da      	mvns	r2, r3
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	400a      	ands	r2, r1
 80003fc:	601a      	str	r2, [r3, #0]
		(pGPIOHandle->pGPIOx->MODER|=temp);
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	6819      	ldr	r1, [r3, #0]
 8000404:	687b      	ldr	r3, [r7, #4]
 8000406:	681b      	ldr	r3, [r3, #0]
 8000408:	68fa      	ldr	r2, [r7, #12]
 800040a:	430a      	orrs	r2, r1
 800040c:	601a      	str	r2, [r3, #0]
	}
	else{};

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 800040e:	687b      	ldr	r3, [r7, #4]
 8000410:	f993 3005 	ldrsb.w	r3, [r3, #5]
 8000414:	2b02      	cmp	r3, #2
 8000416:	d13c      	bne.n	8000492 <GPIO_Init+0xea>
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000418:	687b      	ldr	r3, [r7, #4]
 800041a:	f993 3004 	ldrsb.w	r3, [r3, #4]
 800041e:	2b00      	cmp	r3, #0
 8000420:	da00      	bge.n	8000424 <GPIO_Init+0x7c>
 8000422:	3307      	adds	r3, #7
 8000424:	10db      	asrs	r3, r3, #3
 8000426:	b25b      	sxtb	r3, r3
 8000428:	72fb      	strb	r3, [r7, #11]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800042a:	687b      	ldr	r3, [r7, #4]
 800042c:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8000430:	425a      	negs	r2, r3
 8000432:	f003 0307 	and.w	r3, r3, #7
 8000436:	f002 0207 	and.w	r2, r2, #7
 800043a:	bf58      	it	pl
 800043c:	4253      	negpl	r3, r2
 800043e:	b25b      	sxtb	r3, r3
 8000440:	72bb      	strb	r3, [r7, #10]

		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF<<(4*temp2));
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	7afa      	ldrb	r2, [r7, #11]
 8000448:	3208      	adds	r2, #8
 800044a:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800044e:	7abb      	ldrb	r3, [r7, #10]
 8000450:	009b      	lsls	r3, r3, #2
 8000452:	220f      	movs	r2, #15
 8000454:	fa02 f303 	lsl.w	r3, r2, r3
 8000458:	43d9      	mvns	r1, r3
 800045a:	687b      	ldr	r3, [r7, #4]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	7afa      	ldrb	r2, [r7, #11]
 8000460:	4001      	ands	r1, r0
 8000462:	3208      	adds	r2, #8
 8000464:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<(4*temp2));
 8000468:	687b      	ldr	r3, [r7, #4]
 800046a:	681b      	ldr	r3, [r3, #0]
 800046c:	7afa      	ldrb	r2, [r7, #11]
 800046e:	3208      	adds	r2, #8
 8000470:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	f993 3009 	ldrsb.w	r3, [r3, #9]
 800047a:	461a      	mov	r2, r3
 800047c:	7abb      	ldrb	r3, [r7, #10]
 800047e:	009b      	lsls	r3, r3, #2
 8000480:	fa02 f103 	lsl.w	r1, r2, r3
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	681b      	ldr	r3, [r3, #0]
 8000488:	7afa      	ldrb	r2, [r7, #11]
 800048a:	4301      	orrs	r1, r0
 800048c:	3208      	adds	r2, #8
 800048e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}


	temp=0;
 8000492:	2300      	movs	r3, #0
 8000494:	60fb      	str	r3, [r7, #12]
	    temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	f993 3006 	ldrsb.w	r3, [r3, #6]
 800049c:	461a      	mov	r2, r3
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	f993 3004 	ldrsb.w	r3, [r3, #4]
 80004a4:	005b      	lsls	r3, r3, #1
 80004a6:	fa02 f303 	lsl.w	r3, r2, r3
 80004aa:	60fb      	str	r3, [r7, #12]
	    (pGPIOHandle->pGPIOx->OSPEEDR&= ~(0x3<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	681b      	ldr	r3, [r3, #0]
 80004b0:	6899      	ldr	r1, [r3, #8]
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	f993 3004 	ldrsb.w	r3, [r3, #4]
 80004b8:	005b      	lsls	r3, r3, #1
 80004ba:	2203      	movs	r2, #3
 80004bc:	fa02 f303 	lsl.w	r3, r2, r3
 80004c0:	43da      	mvns	r2, r3
 80004c2:	687b      	ldr	r3, [r7, #4]
 80004c4:	681b      	ldr	r3, [r3, #0]
 80004c6:	400a      	ands	r2, r1
 80004c8:	609a      	str	r2, [r3, #8]
		(pGPIOHandle->pGPIOx->OSPEEDR|=temp);
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	681b      	ldr	r3, [r3, #0]
 80004ce:	6899      	ldr	r1, [r3, #8]
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	68fa      	ldr	r2, [r7, #12]
 80004d6:	430a      	orrs	r2, r1
 80004d8:	609a      	str	r2, [r3, #8]
	temp=0;
 80004da:	2300      	movs	r3, #0
 80004dc:	60fb      	str	r3, [r7, #12]
	    temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	f993 3007 	ldrsb.w	r3, [r3, #7]
 80004e4:	461a      	mov	r2, r3
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	f993 3004 	ldrsb.w	r3, [r3, #4]
 80004ec:	005b      	lsls	r3, r3, #1
 80004ee:	fa02 f303 	lsl.w	r3, r2, r3
 80004f2:	60fb      	str	r3, [r7, #12]
	    (pGPIOHandle->pGPIOx->PUPDR&=~(0x3<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	681b      	ldr	r3, [r3, #0]
 80004f8:	68d9      	ldr	r1, [r3, #12]
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8000500:	005b      	lsls	r3, r3, #1
 8000502:	2203      	movs	r2, #3
 8000504:	fa02 f303 	lsl.w	r3, r2, r3
 8000508:	43da      	mvns	r2, r3
 800050a:	687b      	ldr	r3, [r7, #4]
 800050c:	681b      	ldr	r3, [r3, #0]
 800050e:	400a      	ands	r2, r1
 8000510:	60da      	str	r2, [r3, #12]
		(pGPIOHandle->pGPIOx->PUPDR|=temp);
 8000512:	687b      	ldr	r3, [r7, #4]
 8000514:	681b      	ldr	r3, [r3, #0]
 8000516:	68d9      	ldr	r1, [r3, #12]
 8000518:	687b      	ldr	r3, [r7, #4]
 800051a:	681b      	ldr	r3, [r3, #0]
 800051c:	68fa      	ldr	r2, [r7, #12]
 800051e:	430a      	orrs	r2, r1
 8000520:	60da      	str	r2, [r3, #12]
	temp=0;
 8000522:	2300      	movs	r3, #0
 8000524:	60fb      	str	r3, [r7, #12]
		temp=(pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	f993 3008 	ldrsb.w	r3, [r3, #8]
 800052c:	461a      	mov	r2, r3
 800052e:	687b      	ldr	r3, [r7, #4]
 8000530:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8000534:	005b      	lsls	r3, r3, #1
 8000536:	fa02 f303 	lsl.w	r3, r2, r3
 800053a:	60fb      	str	r3, [r7, #12]
		(pGPIOHandle->pGPIOx->OTYPER&= ~(0x1<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	6859      	ldr	r1, [r3, #4]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	f993 3004 	ldrsb.w	r3, [r3, #4]
 8000548:	005b      	lsls	r3, r3, #1
 800054a:	2201      	movs	r2, #1
 800054c:	fa02 f303 	lsl.w	r3, r2, r3
 8000550:	43da      	mvns	r2, r3
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	400a      	ands	r2, r1
 8000558:	605a      	str	r2, [r3, #4]
	    (pGPIOHandle->pGPIOx->OTYPER|=temp);
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	6859      	ldr	r1, [r3, #4]
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	68fa      	ldr	r2, [r7, #12]
 8000566:	430a      	orrs	r2, r1
 8000568:	605a      	str	r2, [r3, #4]





}
 800056a:	bf00      	nop
 800056c:	3710      	adds	r7, #16
 800056e:	46bd      	mov	sp, r7
 8000570:	bd80      	pop	{r7, pc}

08000572 <GPIO_ReadFromInputPin>:
					}


}
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx,uint8_t PinNumber)
{
 8000572:	b480      	push	{r7}
 8000574:	b085      	sub	sp, #20
 8000576:	af00      	add	r7, sp, #0
 8000578:	6078      	str	r0, [r7, #4]
 800057a:	460b      	mov	r3, r1
 800057c:	70fb      	strb	r3, [r7, #3]
	    uint8_t value;
		value = (uint8_t)((pGPIOx->IDR >>PinNumber) & 0x00000001);
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	691a      	ldr	r2, [r3, #16]
 8000582:	78fb      	ldrb	r3, [r7, #3]
 8000584:	fa42 f303 	asr.w	r3, r2, r3
 8000588:	b2db      	uxtb	r3, r3
 800058a:	f003 0301 	and.w	r3, r3, #1
 800058e:	73fb      	strb	r3, [r7, #15]
		return value;
 8000590:	7bfb      	ldrb	r3, [r7, #15]


}
 8000592:	4618      	mov	r0, r3
 8000594:	3714      	adds	r7, #20
 8000596:	46bd      	mov	sp, r7
 8000598:	bc80      	pop	{r7}
 800059a:	4770      	bx	lr

0800059c <GPIO_WriteToOutputPin>:
	value = (uint16_t)pGPIOx->IDR;
	return value;

}
void GPIO_WriteToOutputPin(GPIO_RegDef_t  *pGPIOx,uint8_t PinNumber,uint8_t value)
{
 800059c:	b480      	push	{r7}
 800059e:	b083      	sub	sp, #12
 80005a0:	af00      	add	r7, sp, #0
 80005a2:	6078      	str	r0, [r7, #4]
 80005a4:	460b      	mov	r3, r1
 80005a6:	70fb      	strb	r3, [r7, #3]
 80005a8:	4613      	mov	r3, r2
 80005aa:	70bb      	strb	r3, [r7, #2]
	if (value==GPIO_PIN_SET)
 80005ac:	78bb      	ldrb	r3, [r7, #2]
 80005ae:	2b01      	cmp	r3, #1
 80005b0:	d109      	bne.n	80005c6 <GPIO_WriteToOutputPin+0x2a>
	{
		pGPIOx->ODR |= (1<<PinNumber);
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	695a      	ldr	r2, [r3, #20]
 80005b6:	78fb      	ldrb	r3, [r7, #3]
 80005b8:	2101      	movs	r1, #1
 80005ba:	fa01 f303 	lsl.w	r3, r1, r3
 80005be:	431a      	orrs	r2, r3
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	615a      	str	r2, [r3, #20]
	else
	{
		pGPIOx->ODR &= ~(1<<PinNumber);
	}

}
 80005c4:	e009      	b.n	80005da <GPIO_WriteToOutputPin+0x3e>
		pGPIOx->ODR &= ~(1<<PinNumber);
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	695a      	ldr	r2, [r3, #20]
 80005ca:	78fb      	ldrb	r3, [r7, #3]
 80005cc:	2101      	movs	r1, #1
 80005ce:	fa01 f303 	lsl.w	r3, r1, r3
 80005d2:	43db      	mvns	r3, r3
 80005d4:	401a      	ands	r2, r3
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	615a      	str	r2, [r3, #20]
}
 80005da:	bf00      	nop
 80005dc:	370c      	adds	r7, #12
 80005de:	46bd      	mov	sp, r7
 80005e0:	bc80      	pop	{r7}
 80005e2:	4770      	bx	lr

080005e4 <__libc_init_array>:
 80005e4:	b570      	push	{r4, r5, r6, lr}
 80005e6:	4d0d      	ldr	r5, [pc, #52]	@ (800061c <__libc_init_array+0x38>)
 80005e8:	4c0d      	ldr	r4, [pc, #52]	@ (8000620 <__libc_init_array+0x3c>)
 80005ea:	1b64      	subs	r4, r4, r5
 80005ec:	10a4      	asrs	r4, r4, #2
 80005ee:	2600      	movs	r6, #0
 80005f0:	42a6      	cmp	r6, r4
 80005f2:	d109      	bne.n	8000608 <__libc_init_array+0x24>
 80005f4:	4d0b      	ldr	r5, [pc, #44]	@ (8000624 <__libc_init_array+0x40>)
 80005f6:	4c0c      	ldr	r4, [pc, #48]	@ (8000628 <__libc_init_array+0x44>)
 80005f8:	f000 f818 	bl	800062c <_init>
 80005fc:	1b64      	subs	r4, r4, r5
 80005fe:	10a4      	asrs	r4, r4, #2
 8000600:	2600      	movs	r6, #0
 8000602:	42a6      	cmp	r6, r4
 8000604:	d105      	bne.n	8000612 <__libc_init_array+0x2e>
 8000606:	bd70      	pop	{r4, r5, r6, pc}
 8000608:	f855 3b04 	ldr.w	r3, [r5], #4
 800060c:	4798      	blx	r3
 800060e:	3601      	adds	r6, #1
 8000610:	e7ee      	b.n	80005f0 <__libc_init_array+0xc>
 8000612:	f855 3b04 	ldr.w	r3, [r5], #4
 8000616:	4798      	blx	r3
 8000618:	3601      	adds	r6, #1
 800061a:	e7f2      	b.n	8000602 <__libc_init_array+0x1e>
 800061c:	08000644 	.word	0x08000644
 8000620:	08000644 	.word	0x08000644
 8000624:	08000644 	.word	0x08000644
 8000628:	08000648 	.word	0x08000648

0800062c <_init>:
 800062c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800062e:	bf00      	nop
 8000630:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000632:	bc08      	pop	{r3}
 8000634:	469e      	mov	lr, r3
 8000636:	4770      	bx	lr

08000638 <_fini>:
 8000638:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800063a:	bf00      	nop
 800063c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800063e:	bc08      	pop	{r3}
 8000640:	469e      	mov	lr, r3
 8000642:	4770      	bx	lr
